<Controls:MetroWindow x:Class="GameCreator.MainWindow" x:Name="window"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:local="clr-namespace:GameCreator"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:Converter="clr-namespace:GameCreator.Extensions.Converter"
                      xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
                      xmlns:pane="clr-namespace:GameCreator.Views.Pane"
                      xmlns:usercontrols="clr-namespace:GameCreator.Extensions.Controls"
                      Height="600"
                      Width="800"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      DataContext="{x:Static local:MainViewModel.Instance}">
    <Window.Resources>
        <Converter:NullObjectToBooleanConverter x:Key="NullObjectToBooleanConverter" />
        <Converter:ActiveItemConverter x:Key="ActiveItemConverter" />
        <Converter:ImageToBrushConverter x:Key="ImageToBrushConverter" />
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="Title" Value="GameCreator" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=CurrentGame,Converter={StaticResource NullObjectToBooleanConverter}}" Value="True">
                    <Setter Property="Title">
                        <Setter.Value>
                            <Binding StringFormat="GameCreator - {0}" Path="CurrentGame.Name" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Grid>
        <DockPanel>
            <StackPanel DockPanel.Dock="Top">
                <Menu>
                    <MenuItem Header="{DynamicResource Game}" >
                        <MenuItem Header="{DynamicResource New}" Command="{Binding ElementName=window,Path=LoadGame}" CommandParameter="New" />
                        <MenuItem Header="{DynamicResource Open}" Command="{Binding ElementName=window,Path=LoadGame}" CommandParameter="Load"/>
                        <MenuItem Header="{DynamicResource Save}" Command="{Binding ElementName=window,Path=SaveGame}" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}"/>
                        <MenuItem Header="{DynamicResource SaveAs}" Command="{Binding ElementName=window,Path=SaveGameAs}" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}"/>
                        <MenuItem Header="{DynamicResource Close}" Command="{Binding ElementName=window,Path=CloseApplication}"/>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource Add}" >
                        <MenuItem Header="{DynamicResource Class}" Command="{Binding ElementName=window,Path=AddItem}" CommandParameter="Class" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                        <MenuItem Header="{DynamicResource Image}" Command="{Binding ElementName=window,Path=AddItem}" CommandParameter="Image" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                        <MenuItem Header="{DynamicResource Object}" Command="{Binding ElementName=window,Path=AddItem}" CommandParameter="Object" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                        <MenuItem Header="{DynamicResource Level}" Command="{Binding ElementName=window,Path=AddItem}" CommandParameter="Level" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                    </MenuItem>
                    <MenuItem Header="{DynamicResource View}" />
                    <MenuItem Header="{DynamicResource Extras}" />
                    <MenuItem Header="{DynamicResource Help}">
                        <MenuItem Header="{DynamicResource Help}" />
                        <MenuItem Header="{DynamicResource Info}" />
                    </MenuItem>
                </Menu>
                <ToolBar>
                    <Button>
                        <Path Width="20" Height="25" Stretch="Fill" Fill="Green" Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>
                    </Button>
                    <Button>
                        <Rectangle Width="25" Height="25" Stretch="Fill" Fill="Red"/>
                    </Button>
                    <Separator/>
                    <Button Command="{Binding ElementName=window, Path=AssignChanges}" CommandParameter="{Binding ActiveItem}">
                        <Rectangle Width="15" Height="15" Stretch="Fill" Fill="Blue"/>
                    </Button>
                </ToolBar>
            </StackPanel>
            <avalonDock:DockingManager x:Name="dockingManager" Margin="5"
                                           DocumentsSource="{Binding OpenedItems, Mode=TwoWay}"
                                           ActiveContent="{Binding ActiveItem, Mode=TwoWay, Converter={StaticResource ActiveItemConverter}}">
                <avalonDock:LayoutRoot>
                    <avalonDock:LayoutPanel Orientation="Horizontal">
                        <avalonDock:LayoutAnchorablePaneGroup DockWidth="150">
                            <avalonDock:LayoutAnchorablePane>
                                <avalonDock:LayoutAnchorable Title="{DynamicResource ProjectExplorer}">
                                    <TreeView HorizontalAlignment="Stretch">
                                        <TreeViewItem Header="{DynamicResource Classes}" ItemsSource="{Binding Path=CurrentGame.Classes}" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" HorizontalContentAlignment="Stretch">
                                            <TreeViewItem.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{DynamicResource NewClass}" Command="{Binding Path=PlacementTarget.Tag.AddItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Class" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                    <MenuItem Header="{DynamicResource Paste}" Command="{Binding Path=PlacementTarget.Tag.PasteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Class" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                    <MenuItem Header="{DynamicResource DeleteAll}" Command="{Binding Path=PlacementTarget.Tag.DeleteAll, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Class" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                </ContextMenu>
                                            </TreeViewItem.ContextMenu>
                                            <TreeViewItem.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                                                        <TextBlock Text="{Binding Name}" Margin="0" Padding="0,3,0,3" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                                        <Border.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="{DynamicResource Edit}" Command="{Binding Path=PlacementTarget.Tag.EditItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Copy}" Command="{Binding Path=PlacementTarget.Tag.CopyItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Cut}" Command="{Binding Path=PlacementTarget.Tag.CutItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Paste}" Command="{Binding Path=PlacementTarget.Tag.PasteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Class"/>
                                                                <MenuItem Header="{DynamicResource Delete}" Command="{Binding Path=PlacementTarget.Tag.DeleteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                    </Border>
                                                </DataTemplate>
                                            </TreeViewItem.ItemTemplate>
                                        </TreeViewItem>
                                        <TreeViewItem Header="{DynamicResource Images}" ItemsSource="{Binding Path=CurrentGame.Images}" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" HorizontalContentAlignment="Stretch">
                                            <TreeViewItem.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{DynamicResource NewImage}" Command="{Binding Path=PlacementTarget.Tag.AddItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Image" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                    <MenuItem Header="{DynamicResource Paste}" Command="{Binding Path=PlacementTarget.Tag.PasteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Image" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                    <MenuItem Header="{DynamicResource DeleteAll}" Command="{Binding Path=PlacementTarget.Tag.DeleteAll, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Image" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                </ContextMenu>
                                            </TreeViewItem.ContextMenu>
                                            <TreeViewItem.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                                                        <DockPanel>
                                                            <Image Source="{Binding Image}" DockPanel.Dock="Left" Width="20" Height="20"/>
                                                            <TextBlock Text="{Binding Name}" Margin="0" Padding="0,3,0,3" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                                        </DockPanel>
                                                        <Border.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="{DynamicResource Edit}" Command="{Binding Path=PlacementTarget.Tag.EditItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Copy}" Command="{Binding Path=PlacementTarget.Tag.CopyItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Cut}" Command="{Binding Path=PlacementTarget.Tag.CutItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Paste}" Command="{Binding Path=PlacementTarget.Tag.PasteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Image"/>
                                                                <MenuItem Header="{DynamicResource Delete}" Command="{Binding Path=PlacementTarget.Tag.DeleteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                    </Border>
                                                </DataTemplate>
                                            </TreeViewItem.ItemTemplate>
                                        </TreeViewItem>
                                        <TreeViewItem Header="{DynamicResource Objects}" ItemsSource="{Binding Path=CurrentGame.Objects}" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" HorizontalContentAlignment="Stretch">
                                            <TreeViewItem.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{DynamicResource NewObject}" Command="{Binding Path=PlacementTarget.Tag.AddItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Object" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                    <MenuItem Header="{DynamicResource Paste}" Command="{Binding Path=PlacementTarget.Tag.PasteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Object" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                    <MenuItem Header="{DynamicResource DeleteAll}" Command="{Binding Path=PlacementTarget.Tag.DeleteAll, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Object" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                </ContextMenu>
                                            </TreeViewItem.ContextMenu>
                                            <TreeViewItem.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                                                        <TextBlock Text="{Binding Name}" Margin="0" Padding="0,3,0,3" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                                        <Border.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="{DynamicResource Edit}" Command="{Binding Path=PlacementTarget.Tag.EditItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Copy}" Command="{Binding Path=PlacementTarget.Tag.CopyItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Cut}" Command="{Binding Path=PlacementTarget.Tag.CutItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Paste}" Command="{Binding Path=PlacementTarget.Tag.PasteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Object"/>
                                                                <MenuItem Header="{DynamicResource Delete}" Command="{Binding Path=PlacementTarget.Tag.DeleteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                    </Border>
                                                </DataTemplate>
                                            </TreeViewItem.ItemTemplate>
                                        </TreeViewItem>
                                        <TreeViewItem Header="{DynamicResource Levels}" ItemsSource="{Binding Path=CurrentGame.Levels}" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center">
                                            <TreeViewItem.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{DynamicResource NewLevel}" Command="{Binding Path=PlacementTarget.Tag.AddItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Level" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                    <MenuItem Header="{DynamicResource Paste}" Command="{Binding Path=PlacementTarget.Tag.PasteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Level" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                    <MenuItem Header="{DynamicResource DeleteAll}" Command="{Binding Path=PlacementTarget.Tag.DeleteAll, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Level" IsEnabled="{Binding CurrentGame, Converter={StaticResource NullObjectToBooleanConverter}}" />
                                                </ContextMenu>
                                            </TreeViewItem.ContextMenu>
                                            <TreeViewItem.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                                                        <TextBlock Text="{Binding Name}" Margin="0" Padding="0,3,0,3" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                                        <Border.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="{DynamicResource Edit}" Command="{Binding Path=PlacementTarget.Tag.EditItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Copy}" Command="{Binding Path=PlacementTarget.Tag.CopyItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Cut}" Command="{Binding Path=PlacementTarget.Tag.CutItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                                <MenuItem Header="{DynamicResource Paste}" Command="{Binding Path=PlacementTarget.Tag.PasteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="Level" />
                                                                <MenuItem Header="{DynamicResource Delete}" Command="{Binding Path=PlacementTarget.Tag.DeleteItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}"/>
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                    </Border>
                                                </DataTemplate>
                                            </TreeViewItem.ItemTemplate>
                                        </TreeViewItem>
                                    </TreeView>
                                </avalonDock:LayoutAnchorable>
                            </avalonDock:LayoutAnchorablePane>
                        </avalonDock:LayoutAnchorablePaneGroup>
                        <avalonDock:LayoutDocumentPaneGroup>
                            <avalonDock:LayoutDocumentPane></avalonDock:LayoutDocumentPane>
                        </avalonDock:LayoutDocumentPaneGroup>
                    </avalonDock:LayoutPanel>
                </avalonDock:LayoutRoot>
                <avalonDock:DockingManager.LayoutItemTemplateSelector>
                    <pane:PanesTemplateSelector>
                        <pane:PanesTemplateSelector.ClassPaneTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <Border DockPanel.Dock="Right" Width="200" BorderBrush="Gray" Padding="3" BorderThickness="1">
                                        <StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Row="0" Grid.Column="0" Height="23" VerticalAlignment="Top" Margin="2,6,3,6">
                                                    <Run Text="{DynamicResource Name}"/>
                                                    <Run Text=":"/>
                                                </TextBlock>
                                                <TextBox Text="{Binding Title, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" Height="23" VerticalAlignment="Top" Margin="3,6,2,6"/>

                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                    <Canvas>
                                        <!-- Insert Node editor here -->        
                                    </Canvas>
                                </DockPanel>
                            </DataTemplate>
                        </pane:PanesTemplateSelector.ClassPaneTemplate>
                        <pane:PanesTemplateSelector.ImagePaneTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <Border DockPanel.Dock="Right" Width="200" BorderBrush="Gray" Padding="3" BorderThickness="1">
                                        <StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Row="0" Grid.Column="0" Height="23" VerticalAlignment="Top" Margin="2,6,3,6">
                                                    <Run Text="{DynamicResource Name}"/>
                                                    <Run Text=":"/>
                                                </TextBlock>
                                                <TextBox Text="{Binding Title, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" Height="23" VerticalAlignment="Top" Margin="3,6,2,6"/>

                                            </Grid>
                                            <Button Command="{Binding ElementName=window, Path=BrowseImage}" CommandParameter="{Binding}"  Margin="2,6,2,6">
                                                <TextBlock Text="{DynamicResource Browse}"/>
                                            </Button>
                                        </StackPanel>
                                    </Border>
                                    <!-- Will later be replaced with an image editor -->
                                    <DockPanel>
                                        <Image Source="{Binding CoreImage}" Width="{Binding CoreImage.Width}" Height="{Binding CoreImage.Height}"/>
                                    </DockPanel>
                                </DockPanel>
                            </DataTemplate>
                        </pane:PanesTemplateSelector.ImagePaneTemplate>
                        <pane:PanesTemplateSelector.ObjectPaneTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <Border DockPanel.Dock="Right" Width="200" BorderBrush="Gray" Padding="3" BorderThickness="1">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Grid.Column="0" Height="23" VerticalAlignment="Top" Margin="2,6,3,6">
                                                <Run Text="{DynamicResource Name}"/>
                                                <Run Text=":"/>
                                            </TextBlock>
                                            <TextBox Text="{Binding Title, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" Height="23" VerticalAlignment="Top" Margin="3,6,2,6"/>

                                            <TextBlock Grid.Row="1" Grid.Column="0" Height="23" VerticalAlignment="Top" Margin="2,6,3,6">
                                                <Run Text="{DynamicResource Class}"/>
                                                <Run Text=":"/>
                                            </TextBlock>
                                            <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Item.Game.Classes, Mode=OneWay}" DisplayMemberPath="Name"
                                                        SelectedItem="{Binding Class, Mode=TwoWay}" Margin="3,6,2,6"/>

                                            <TextBlock Grid.Row="2" Grid.Column="0" Height="23" VerticalAlignment="Top" Margin="2,6,3,6">
                                                <Run Text="{DynamicResource Image}"/>
                                                <Run Text=":"/>
                                            </TextBlock>
                                            <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Item.Game.Images, Mode=OneWay}" DisplayMemberPath="Name"
                                                        SelectedItem="{Binding Image, Mode=TwoWay}" Margin="3,6,2,6" />
                                        </Grid>     
                                    </Border>
                                    <Canvas>
                                        <!-- Insert ? here -->
                                    </Canvas>
                                </DockPanel>
                            </DataTemplate>
                        </pane:PanesTemplateSelector.ObjectPaneTemplate>
                        <pane:PanesTemplateSelector.LevelPaneTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <Border DockPanel.Dock="Right" Width="200" BorderBrush="Gray" Padding="3" BorderThickness="1">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>                                                
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Row="0" Grid.Column="0" Height="23" VerticalAlignment="Top" Margin="2,6,3,6">
                                                <Run Text="{DynamicResource Name}"/>
                                                <Run Text=":"/>
                                            </TextBlock>
                                            <TextBox Text="{Binding Title, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Height="23" VerticalAlignment="Top" Margin="3,6,2,6"/>
                                        
                                            <TextBlock Grid.Row="1" Grid.Column="0" Height="23" VerticalAlignment="Top" Margin="2,6,3,6">
                                                <Run Text="{DynamicResource Size}"/>
                                                <Run Text=":"/>
                                            </TextBlock>
                                            <TextBox Text="{Binding Width, Mode=TwoWay}" Grid.Row="1" Grid.Column="1" Height="23" VerticalAlignment="Top" Margin="3,6,3,6"/>
                                            <TextBox Text="{Binding Height, Mode=TwoWay}" Grid.Row="1" Grid.Column="2" Height="23" VerticalAlignment="Top" Margin="3,6,2,6"/>
                                            
                                            <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Height="23" VerticalAlignment="Top" Margin="2,6,3,6">
                                                <Run Text="{DynamicResource BackgroundImage}"/>
                                                <Run Text=":"/>
                                            </TextBlock>
                                            <ComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Item.Game.Images, Mode=OneWay}" DisplayMemberPath="Name"
                                                        SelectedItem="{Binding BackgroundImage, Mode=TwoWay}" Margin="3,6,2,6" />

                                            <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Height="23" VerticalAlignment="Top" Margin="2,6,3,6">
                                                <Run Text="{DynamicResource BackgroundImageLayout}"/>
                                                <Run Text=":"/>
                                            </TextBlock>
                                            <ComboBox Grid.Row="4" Grid.Column="1" ItemsSource="{Binding ImageLayout, Mode=OneWay}"
                                                        SelectedItem="{Binding BackgroundImageLayout, Mode=TwoWay}" Margin="3,6,2,6" />

                                        </Grid>
                                    </Border>
                                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                        <usercontrols:StageEditor Width="{Binding Width}" Height="{Binding Height}">
                                            <usercontrols:StageEditor.BackgroundBrush>
                                                <MultiBinding Converter="{StaticResource ImageToBrushConverter}">
                                                    <Binding Path="BackgroundImage.Image"/>
                                                    <Binding Path="BackgroundImageLayout"/>
                                                </MultiBinding>
                                            </usercontrols:StageEditor.BackgroundBrush>
                                        </usercontrols:StageEditor>                                        
                                    </ScrollViewer>
                                </DockPanel>
                            </DataTemplate>
                        </pane:PanesTemplateSelector.LevelPaneTemplate>
                    </pane:PanesTemplateSelector>
                </avalonDock:DockingManager.LayoutItemTemplateSelector>
                <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                    <pane:PanesStyleSelector>
                        <pane:PanesStyleSelector.ClassPaneStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutItem}">
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                                <Setter Property="Title" Value="{Binding Model.Title}"/>
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                            </Style>
                        </pane:PanesStyleSelector.ClassPaneStyle>
                        <pane:PanesStyleSelector.ImagePaneStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutItem}">
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                                <Setter Property="Title" Value="{Binding Model.Title}"/>
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                            </Style>
                        </pane:PanesStyleSelector.ImagePaneStyle>
                        <pane:PanesStyleSelector.ObjectPaneStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutItem}">
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                                <Setter Property="Title" Value="{Binding Model.Title}"/>
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                            </Style>
                        </pane:PanesStyleSelector.ObjectPaneStyle>
                        <pane:PanesStyleSelector.LevelPaneStyle>
                            <Style TargetType="{x:Type avalonDock:LayoutItem}">
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                                <Setter Property="Title" Value="{Binding Model.Title}"/>
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                            </Style>
                        </pane:PanesStyleSelector.LevelPaneStyle>
                    </pane:PanesStyleSelector>
                </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
            </avalonDock:DockingManager>
        </DockPanel>
    </Grid>
</Controls:MetroWindow>
